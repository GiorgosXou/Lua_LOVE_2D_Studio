<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAQCAwMDAgQDAwMEBAQEBQkGBQUFBQsICAYJDQsNDQ0LDAwO
        EBQRDg8TDwwMEhgSExUWFxcXDhEZGxkWGhQWFxb/2wBDAQQEBAUFBQoGBgoWDwwPFhYWFhYWFhYWFhYW
        FhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhb/wAARCACfAJ0DASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDgbXIYZatfTl6H1rKshtXaevUVt6Wf3fO0ntXFUPAp6y5Wamih
        VuVXHysCPxqzqV1ZWETTXVwkMS5zIz4xXL+OtfHhvQmvY1DXBbbbgjIJPcj2rwnxXq2savOXv72WbzGJ
        CF/lX2C9q0wmBdd80vhLqYpUv3a3PYPFXxU0GO18nT4pLuRWOXCYU49+9cLN8StXIaSRVQsT8iD5VHbP
        vXEw2dwqA4P505kkdtrr93mvYp4HD0/7xw1MTOb1kdjpXxR1mwuC3yXETc7SvNerfD74h6J4giVDILW5
        TCtG7cMT6V84agqquAtQ2sksLfupWQn0p1supVoXS5WaUK9SCvFn2jaqHAZCCrDOR3q7BHXi/wCz78TI
        7ry/DniCZY3Vf9EuZG+9/st7ntXttrh0DKwYMMqwbqK+WxWHqUKjiz3cPUVVXRJGnFYXxCh2x2sn+2R+
        ldHGKzfH8WdED/3JhWMHaSNa1K9JmZ4ZH+hbcfdNX7r5cZXoaq+EDutpB6VrXEO+PPtVSepnTj7iOc1d
        lk421yuvXMFn5bXLTKsjdVgZgPqRwK6zUIuWHPXqKm0aPU7nS7200aG2+1+QVieR9vzkEKTweM47H6Vr
        Gaja5jKh7SWpxU8Ph/WvNt9E1GGS4hQGRlfcuSOhHY15vq14bbXJrJbabEX3pG+4PYH+PP6V1mn/AAJ8
        fWHl3Op6pocUVvhtiF2LHJyDtRf5VifEDUT/AGh/ZMcJjitDuxkEMxGCVB5A+terhXDnapzueVjaVSNJ
        1KsLNbf8MY+r3Ql09vXsPStLw3EGsVDdo0/lWFdIzWsj+ldT4Tjzat/up/Kumt7sTDA+9GcpdkdHYLvY
        Zrf09FVBWHp6fvua37cKsW5jhQMk+gry6uuh6dFW9480/aE1q3hW20//AJbxncyfyNeVLqu6TLetafxX
        1j/hIvG13exDbAG8qP3Vf/r1z8Nm8nToK+lwVFQox5jhqRpym5M6J9UVvLKqBiM8j6VK0lq6YypZhkgd
        SaxbW0Y8DcAOppbqCa3mUAowPIzWns49zlcFeyZa1GOIfM4yx6D0FZcjruIX+GrkrtdlI49zFurN1b/6
        wqG6hCZVf4hz9RWtPYunpoyrDc7ZAcdD6113hn4m+M9CghjstYle3hPyxSLuUe3PNcXN8jbR948Vd06P
        5fLcdfWlXowqxtKJ0SlyLmR9n/DHxZYeK9BjuLaT/SI408+ILtKblz+WRWt4vi3+HZm/u7TXh37Ksd1D
        4uaNNzRPasszN0yDkYr3rXo/M0C5XH/LEn8ga+HxlFUsTywPoMHVdbDc0jmfB0iq0ldAWRl5avPPBV3O
        LxwTtUgj9a7HR7S61C82Krsi8ybRUVY8srhR96NkVtYWFZCQR9Kk+Hs+fFghUsqSpn7vcVvnQZ3G37JM
        y/8AXOpdH8P3Vpqkd0unylo+xO2sJVouNjqjhZKSkjW8bRONHYruHy9fXivkXxdaXUvia6kUbv3pHLe9
        fYniJtT1DTmt4bCNGYYyZOa8Z1z4Z3NveSXLeUrSOSd03c1vleJjRcmzHOMFLE01FHjk1lJBoc3nquSM
        9d1a3gd/9Bcgddv8q6nxp4QlsfC97cNPH+6iJwBnPPrXNeB1f+y2b1K/+giva9sqlNyR4v1V0FynQ2Zw
        4PpR8Rr02Pw91KaKTY/2fy0Psxwabb8tkeneqnxWy3w3vQewXp/vVjGN60BfDTkzw7S42kuMMGJYk4x9
        4mugtbPybNo7eENM4PJXv6VD4S0+S6uk2Lge9ekeH/Ckn7mRlwrHqPWvYxeKjTdmRgcFUxM7paGh8Pfh
        OfEOjRrFJtkk5chfu+tdlqX7PWgR6dtke4eXb8zbsLn6V6J8AdMWC3MapkBeTt716Pf2ymPaV5914r4n
        FZxiFVkoSP0XBZNgFSjz005Hxh4s+Bd1AzjTtTEPXCu/UenNcHrnw98S6cuGt1uIVbkoev4V9qeLtKt7
        iJ1MC7ueWi4JrzzVNFt5Vw+nW8uSR+6ZkYfgeK7sLntdfFqRiuF8DV1greh8nfYFSQbreSIgnezLtxir
        2h6NeandKtnAWVv4tte9+IPCumyxMi2jouDuEoUiuv8ADvhDQksbSWGySJkRei9TjrXrTzxOndI+UxnD
        dTD1UnP3Sv8ABzwrbeGtFiXKyXcqBXf+6OuK7qaPfp8qf3o2H6VDZRRxoFjChVGBVuNNy49a+fqVJVan
        tGelSoxp01BHlvhOJY9aZR2kI/Q16b8P9SsdKvLl72byY5Ixj5M5Oa88sVWDxJMvpcn9a6aQL5e4d60r
        LnSOfDrkudzeeOfD0Kn/AEmdh32wmsDVPi14Ws2IMeqSEdkt/wDFq5TUkzGfpXF+JIf3xqcPhKMpe8PE
        YurBe6ehah8cvDqE+XousSe5CL/WuT8SfGu0u3zb+G7xQvO6S5Va4a9t03HJ5qk0QDcrXqUcDhl9k8ur
        jsW9pfgaHjf4iy6p4bu7JdF8lZk2bzPuxjnP3aq/D99+isxXrJ/7KKyPEUMS6PNJt9q3vhipOgtjp5ld
        UowhR9yJy06lecpe0dzStTggnqDU+sadc6v4cutMtEaaa4j2RIgyxYcgAdzmooVPmDHrXX/DN2i1ieeA
        r5sVlNLDk87yox/47XFWqukuZbndgcOsRVVF7M8y0Lwjq+g6hFaarp11ZTSDfsuItuQO4r1fwXpy6nq1
        tpsKqskxxGG9+Ca9o12HSdb1C00TVYluJlhABWPcYpNuT8/9K88+D3he607433lux3w6a0iAntk5FeZU
        zF4mMpS0kj7GjlUME4xhrE9d8J+G7fQdO8uMl5mX53PTPoKg8Rapp9jHJ9qudhx91PvGunvHjt7ZmfoB
        k4xXiXxy+JE+gafNJoPhNtQSORI2nlzGu4t/AOr/AFHArxadN16nmenGrGEXOWyIfEfj/wALSXDWostS
        mkU43LESB9TWdGttPCstt80bg43LyufWq7a9r9prFiutabZg30KyxxRN8yg9jnmup8dWcGleBZNfWPaB
        E0jRRfe4UnAz34rtnTUGoKOvqddKreHtL+6effEC60TRNJa91W7SEE4C48x/rjsK6LwTdWmqeE9PvtNm
        821mg/dv9D0x2rx3Qdc17xbYp4iGh26QzX6WkNrcj966seXUHjC9DivdNHsbfTtNhsbWNYooUCrGgUAd
        z+td9SiqUOWXxHzmNxP1mfNDb0J4o9nJ7VOuDzTVWnbflrA5eU851OLyvGl0v/TUGulji3p/wEVi+Ml8
        jxnKx/5aKtbtrIrW68/wit5S0Rxwp+8yjqEJWEiuP8SJhjjdnNd1esPIauJ8RDDZ9c1ph5e8Y4iOhyd/
        G27FUSrEFfStS6HzmqUy8dO9etCR5Mo+8Y3iRP8AiUygcj1roPhMpHhtm/vSmsTxRxo8g+7mt34Wx/8A
        FL/9tnqq0v3PzM6S99lxSrLt9a3PCOo/2dr1reuC0auRMB3RuD+ma5+E/Lz8vtVy1fC/MVA9WOB+NctS
        HMmkdWFrOlNSXQ93htdXk8zXNIkhmkiljnaOR+LlOOVPbcByK6vwqLdPHOqXCxbJLxIpuuSp2/MPpXkX
        wP8AGsNzqX/CKC9s7qOVCyx+aN8JH9K7q3mm0P4gWbzXLTR3kbxyt/CnO4D9K+YxFF05uLP0SjiqeLoK
        otz1K+i860OP7tee+LIfKLxsFZM5GV6Gu5huS6mPGRgYx6HvWH4m03zJfMFckZNO5tQjaVmea6D4WjvP
        EDX1y7bcjap6n2+ldd8QdMWbwt5C8hUI2+2KpPcfYb6FVIVS43sTgIM8n8K2pLjS72OXTzfNPMwG1/Kb
        aM9BurZzk5ROyUbHhXh3R0tNRE0h3PDLkZ7c131vIjfMe4FY+qWNtLqxtobkr5zlXkj6rzjj3q5Z+FdO
        Rf32p6i/qfP216EajkuaR4GZU37VKBpo3YVIAOhqGz8LaS2GMl+VB6NdN81aNv4c0YcLBMfQtPI3/s1T
        KqjgjTqHk/x1uTY6hY3EZ2+dH/I1kWHip1tY1aWPhefmr1Hx9b+EdPigOoaGmoTfK0MTYO1GOMZdtq5P
        bqapeCL7wdq+tyaQvhG30+8ijMoilgRgVDbch1+vSu2nWh7H4bnDPCy9u3z2MFL5JrEOZB8wBrlvEF1H
        JOqqy55xhq92GkaUsOyPS7OPKkDbCK+afEErR65Igx8kxA28YHPFXgpKpPQxx1J0YK7Jpy2+qlxwd3pV
        mYsct9Ko3LNu46V6q2PIm9bmZ4ufGiuU6k810fwvwnhVd3eZ/wClcv4rP/Emcf7Wa2/BM3keH4493Ria
        utH90jCi7Tkznte+IOiaWGWIvezLxtj+UA+5rjZPFNzromn1NwGuCRHChxHEnoB3Pqa5PXI5ba/MBDAE
        nn1qa2fy1U+1e1DB06cOZHHUlN01rudV8IfEJ8D/ABQstaOGghLRSY6qjYyfyr7PudctNTtrTV4rhXjA
        V0IbhhjnPuK+DGceSWYZ3DHFer/ArxxMunv4fvp9ygfIrN0HQGvHzvLfbRVaO6PouHc09jJ0Kmz29T7o
        8L6olxp8TrIsi7Rz6Vo3k8bxk5/GvmXwX8UpvC9wlhq4b7C3CXfXaD2c+lewaf4sstU01ZrG6jlRl4KN
        xzXxNbCVKbv0Pu6VSFSVoy1HeILiyh1RoNytIw5T1Fcr4w1xrKxMNtJB5f8Ay0InVSi98/hU2uabZXt0
        17LZtcXGDiZvvAeg9q898XWCRzFntlhABJY9cd81ph6UZSszvbSptyIvC/inSbDXrS1v9Tgja6keO0Ln
        HnuvBAPfrXpdixaRXkdcEfKobqD3r4R+JGuza74jmvXdjbRExWceeERTyR9SK9k/Z/8AixqcnhG+8M6h
        cGTUrG1luNNvZF3GRUGWib/dA4r6TF5RKFCFSG7PhVnMK2JlGWz0T9D6btbpflABwc/dHpV1Z2VoyoAV
        gSSxxjHtXmcPji6tb4/a1hnhe7WJSjhSqMEIfB46MG/Ctbw1q+o3d5Zw3EbO00TP5zBgcRsyvkfdHJQg
        d91eLPDTXxHesRCWxD8StTu5fEos7DTo51trfd50hAjZeoJcZ+YHoMVyfwx1jWrXxtoccukCOG9ga1Pm
        lS/lg7txIwVYbV4I5FbHxGtbi71+aJtHa8Xy1wJb7yIfqRlf5VzPhWzlg+Lmip/Yf2JfNdj5N95qcRvz
        1r0KMafsWn/X4nm1pT9smv6/A91eUCVEX5pGOMegr5g8bqY/EV3ngrctkfjX0vAypcbiGL56+1fNXxQP
        l+NNTT0uGP61OV/Gx5x/DiO35hB/2BVK5OTn0p8LZs4/pUMz44XqetexGOp8/J6GT4ybbozsP74zW54X
        j36DA31rnfGLt/Y+M4y4rb8NykaFAPrV1o/u0c9OXvyPOvFmlwyWxkjG8cnK9c+9clMjW7BXVsZ4rdut
        ee2VUSJip4cHv6VRvbq2u2yDw33l9692hzQ92Rx813dLQzWl5GeBmpNPup7S8iuraRo5YjlWHSobiJos
        tE25c/dqHzuzrt966JWaaextHvE98+G/iKz8S6KYZgnnxfLPC38J9fxro7e0m0WTzdJuri07lFbCk/Tv
        Xzj4Z1S/0PVI9T0+bbInBVvuuPQ+1eo6D8V7C6tVi1S0ktph1kX5oz/gPevmMZl1WEuan8J9dl+cUHBR
        ru0l1PWLf4t+INJC2k2nxXm4f6xW2N+NeSfGD4yar4gt7zRrCwOnsxMFw7tucL3APoRXV2F7peoxC8gv
        IpgV5w3r2rx34o6aln4se5tpY5IrnkBG5X1zUZbg8PKvaUPeDNswxMaSUKt4y9DnIX3bgxPXJZvWtf4c
        6yPDXjvTdZ37I7S5RpD/ANMvuv8AoTWJcB4ZsH7p5pFZZWCnIBOOK+onTUoNHykHytSR9+ac0VzaiaNw
        UdQ0Y2+uDmtG1V0m+0CCIzGMRNLjDlAcgfTNfP8A8Lvjhotn4BtbLxFFN9v05Eti1vEzecoHyyD69DXe
        +C/i9o+vbfKsJ7WNpCFa6ljjdvcIGzj3NfAV8vxEJy090+xw+Pw04pN+8yx8RoI7rxhJLcaLp1yUjXEl
        xqPkJ93pt7n3rlfBtksPxj0pY9HtbVI2c5ivvNXIjcZH510Un2PxNqM2pXtlpnnYaOFJ058tXZRyeDkj
        tXGeJDF4C8UW/ipdHsZobQyKu2ZlZiy7cjHAzvxXTh03F0/6/M48TaMvaP4b/wBdD39ZMXm7+8P5V84/
        HRvK+I2qR+swP6V0Pw1+M+pajPOmt6I5y+YGtwQqp6H1PvXDfGjVRqfj+7uwhj80Idp642DrWmXYSpSx
        HLNHLm+PpV8CpU31LGmTb9Lj+mKbO+FP9Kz/AA7cbrDaW6Hin3dxgEbq9SUPePFjVThFsz/F0ubAD/bH
        Wtfw1LjR4fpXOeJH3W//AAIVt+H5QNIhTd90VdWP7tGOHqc1SR5DJKP4+tQSFG4x+FQSSL0FIpPaveNI
        07EuXj+6cjuPSpEuBINr1AST1pkij7w7c0tiuVPct+WF5TpRGdrc1VjuGXryKtQyrK4HqKe5EoyW5Ok2
        OIyw9QGpxV5IzKsTbF6mqtwvlnk4Xsa1tBMtzafYYwWkYFVjAyWxzxSlpqYzuopohhIkj2sq47/Ssi6Q
        292y4+UngVdVZLe4KSI0ciscq42mk1YJNa+cv3l60ehdP3JW6MueB9St7HxLbSXeXtGkMdxjH+rPG7nj
        jrXS2uui212OCUaXdwvcSKv2iyDGMbmRQSCoGcdcfxV5/G2Bk+nrivTvgn4M1bUI7bxlpt3bSQWs00Nx
        Fj99attwrAd/vZzXDjI04Q559Tto+051yHQfEHWLjTfC0NhapZ6bqTzrIPscW+O7g4xICWYbc8ABhz2r
        R8KeIdM8RG10eCSzFwIC7PeLmORwPlyvuMn8K5H4qaaVurK4vPtltqcjPHGnlmQzhG/1gX36UnhDwnqr
        Srqdv4J1q6kRT5LC5WAMfUknI+lee6VB0E3I2+s1frWiPdPhL9k1zwr/AGhcaVa2rrM8JWAq0b7Dt3DH
        I+hrzf8AaJtobPx8BAgVZLZD8vHb0rvvgX4c1Dw34TkOqBobq7laRrJXzFaA9h6se5rhf2mEW58ZWU3r
        agf+PNXn4NpY9pS01N80SllybVtjnPD7k2rbHCn3WlvJpg3+sX/vmsW3Dwr8sjD6NSXE8p6yv/31Xsez
        vK58y6y9kosXWpmMaliv3h29607CZxaqF24x/ernLzzH27pCBvHX61cimmSMBZGxWkoe6Z06iUTgNwx8
        1NHHIo3buTS16W57AZzSL6Un3Wz60vTmkMCMUmSOR17U6jbjmnYLjfNk247pVjTb5o7hHDBXjYMpJ6EH
        g1XZcSBh+NRyqUkDr3NErtD5YyO88dLHryyeI7eVftyoralbqmNwJCrKB2/2h2ODXLqhSMg/exgfjS6P
        qMlsjtHEH8yNo2CtjgjuKZsl2+Y+FAPC+mazowcPdOZ820jPYFdyt/Ca9a/ZV8YXug67qGiobfydQQTY
        nj3DenBHv1/8dryS/CLdfJuKnqav+GbsWWuWdzkgxzYYjqF71li6Ea1GUGd9Go6clNH1jda3G+pC/m0b
        R3vEGFuTaZkx6Bt3A9qJ/FVyzfLZ2f8AwEMv/s1eeaVrpaBWd/PjYDDBvmFWtL17StU1K5s7G786a1x5
        gC8c9h9O9fL/AFXutj1ZYhR26nbJ4qu42yLe25/22rjfHs7a/fQ3dzFHG8Ue0BCx79amZmDEHp2qlefe
        q6NJU5Xic2IqOpDlkc3dWYWTaBuxWVcQ7Wxj1rp7pVLyECsi/iBY/LXrU6lz5zFUYp6HOagNq5HUHirN
        rhoQT1pmsJtR/wAKWxybVPpXTujgtocKpDfeFO2+lMU5GafG3zAV3nvEcww2akQZXPtUk6biPpTrOPdn
        2osS5e6V6Kcw2sfrTd1BQU1vnjK+lOpshx89A0NtXKSY75qaS8Zcr61DKDuDDvSTcsvFF7Irli3qIzbo
        2U/Wo4ZCjj2NWmSLyfuc4qpI2eAOlDRUdTf03Xru1VdkjYA6ZzmtPwN4hXTFkZ22vJIWMi8EZ9RXHwuO
        7MMVPHKo6FjWcqEJmbp8vwnp2kePLy71FYzbwvZjhmY7ZT7gV1q3dveW5e3lV14yP4l+teDw3ZQ/ISPa
        tvR/EkiMquJQw4Dq3SuCtgor4ROpVh0uj1FiFuH/AAqtIUO4H9K5my8QNG6yeazoeqOuc1rWurQXP3Cy
        nuD0/CsfYyicVSvF7obqunx3MJjY/Kf7vX8ajt7COCFUUkgetW5ZmZemR25qLKdeeatc1rHFKUb+6f/Z
</value>
  </data>
</root>